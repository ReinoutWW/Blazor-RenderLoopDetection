@page "/counter"

@using Blazor_RenderLoopDetection.Components.Layout;

@inherits PageBase
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<h1>Counter - With render loop on count "1"</h1>

<p>
   This component demonstrates a render loop detection when the count is 1.
    <br />
    <strong>Click the button to trigger the render loop</strong>
</p>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        // Once currentCount is 1, the render loop will be triggered
        // to demonstrate the render loop detection
        if(TriggerFaultyPath())
            MethodThatSeemsInnocent();
    }

    private bool TriggerFaultyPath()
    {
        // This is the trigger for the render loop
        return currentCount == 1;
    }

    private void MethodThatSeemsInnocent() 
    {
        // Somewhere multiple levels deep, this method will be called in specific
        // and of course complex scenarios, causing a render loop
        GetDataFromDatabase();
    }

    private void GetDataFromDatabase()
    {
        // The source for render loops
        StateHasChanged();
    }

    private void IncrementCount()
    {
        currentCount++;
    }
}
